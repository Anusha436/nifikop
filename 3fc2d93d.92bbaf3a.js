(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{149:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(1),r=a(9),i=(a(0),a(180)),o={id:"1_developer_guide",title:"Developer guide",sidebar_label:"Developer guide"},c={id:"6_contributing/1_developer_guide",title:"Developer guide",description:"## Operator SDK",source:"@site/docs/6_contributing/1_developer_guide.md",permalink:"/nifikop/docs/6_contributing/1_developer_guide",editUrl:"https://github.com/Orange-OpenSource/nifikop/edit/master/website/docs/6_contributing/1_developer_guide.md",sidebar_label:"Developer guide",sidebar:"docs",previous:{title:"NiFi User",permalink:"/nifikop/docs/5_references/2_nifi_user/1_nifi_user"},next:{title:"Reporting bugs",permalink:"/nifikop/docs/6_contributing/2_reporting_bugs"}},l=[{value:"Operator SDK",id:"operator-sdk",children:[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Install the Operator SDK CLI",id:"install-the-operator-sdk-cli",children:[]},{value:"Initial setup",id:"initial-setup",children:[]},{value:"Build NiFiKop",id:"build-nifikop",children:[]},{value:"Run NiFiKop",id:"run-nifikop",children:[]}]},{value:"Helm",id:"helm",children:[]}],b={rightToc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"operator-sdk"},"Operator SDK"),Object(i.b)("h3",{id:"prerequisites"},"Prerequisites"),Object(i.b)("p",null,"NiFiKop has been validated with :"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"dep_tool"}),"dep")," version v0.5.1+."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"go_tool"}),"go")," version v1.13+."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"docker_tool"}),"docker")," version 18.09+."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"kubectl_tool"}),"kubectl")," version v1.13.3+."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://helm.sh/"}),"Helm")," version v2.12.2."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/operator-framework/operator-sdk"}),"Operator sdk")," version v0.18.2 ")),Object(i.b)("h3",{id:"install-the-operator-sdk-cli"},"Install the Operator SDK CLI"),Object(i.b)("p",null,"First, checkout and install the operator-sdk CLI:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"mkdir -p $GOPATH/src/github.com/operator-framework/\ncd $GOPATH/src/github.com/operator-framework/\ngit clone https://github.com/operator-framework/operator-sdk.git\ncd operator-sdk\ngit checkout v1.18.0\nmake tidy\nmake install\n")),Object(i.b)("h3",{id:"initial-setup"},"Initial setup"),Object(i.b)("p",null,"Checkout the project."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/Orange-OpenSource/nifikop.git\ncd nifikop\n")),Object(i.b)("h3",{id:"build-nifikop"},"Build NiFiKop"),Object(i.b)("h4",{id:"local-environment"},"Local environment"),Object(i.b)("p",null,"If you prefer working directly with your local go environment you can simply uses :"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"make build\n")),Object(i.b)("h4",{id:"cross-platform-build-environment"},"Cross platform build environment"),Object(i.b)("p",null,"Build the docker image which will be used to build CassKop docker image"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"make build-ci-image\n")),Object(i.b)("div",{className:"admonition admonition-tip"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If you want to change the operator-sdk version change the ",Object(i.b)("strong",{parentName:"p"},"OPERATOR_SDK_VERSION")," in the Makefile."))),Object(i.b)("p",null,"Then build NiFiKop (code & image)"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"make docker-build\n")),Object(i.b)("h3",{id:"run-nifikop"},"Run NiFiKop"),Object(i.b)("p",null,"We can quickly run NiFiKop in development mode (on your local host), then it will use your kubectl configuration file to connect to your kubernetes cluster."),Object(i.b)("p",null,"There are several ways to execute your operator :"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Using your IDE directly"),Object(i.b)("li",{parentName:"ul"},"Executing directly the Go binary"),Object(i.b)("li",{parentName:"ul"},"deploying using the Helm charts")),Object(i.b)("p",null,"If you want to configure your development IDE, you need to give it environment variables so that it will uses to connect to kubernetes."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"KUBECONFIG={path/to/your/kubeconfig}\nWATCH_NAMESPACE={namespace_to_watch}\nPOD_NAME={name for operator pod}\nLOG_LEVEL=Debug\nOPERATOR_NAME=ide\n")),Object(i.b)("h4",{id:"run-the-operator-locally-with-the-go-binary"},"Run the Operator Locally with the Go Binary"),Object(i.b)("p",null,"This method can be used to run the operator locally outside of the cluster. This method may be preferred during development as it facilitates faster deployment and testing."),Object(i.b)("p",null,"Set the name of the operator in an environment variable"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," export OPERATOR_NAME=cassandra-operator\n")),Object(i.b)("p",null,"Deploy the CRD."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"kubectl apply -f deploy/crds/nifi.orange.com_nificlusters_crd.yaml\n")),Object(i.b)("p",null,"And deploy the operator."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"make run\n")),Object(i.b)("p",null,"This will run the operator in the ",Object(i.b)("inlineCode",{parentName:"p"},"default")," namespace using the default Kubernetes config file at ",Object(i.b)("inlineCode",{parentName:"p"},"$HOME/.kube/config"),"."),Object(i.b)("h4",{id:"deploy-using-the-helm-charts"},"Deploy using the Helm Charts"),Object(i.b)("p",null,"This section provides an instructions for running the operator Helm charts with an image that is built from the local branch."),Object(i.b)("p",null,"Build the image from the current branch."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"export DOCKER_REPO_BASE={your-docker-repo}\nmake docker-build\n")),Object(i.b)("p",null,"Push the image to docker hub (or to whichever repo you want to use)"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ make push\n")),Object(i.b)("div",{className:"admonition admonition-info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The image tag is a combination of the version as defined in ",Object(i.b)("inlineCode",{parentName:"p"},"verion/version.go")," and the branch name."))),Object(i.b)("p",null,"Install the Helm chart."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"helm install ./helm/nifikop \\\n    --set image.tag=v0.2.1-release \\\n    --name skeleton\n")),Object(i.b)("div",{className:"admonition admonition-important"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"image.repository")," and ",Object(i.b)("inlineCode",{parentName:"p"},"image.tag")," template variables have to match the names from the image that we pushed in the previous step."))),Object(i.b)("div",{className:"admonition admonition-info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"We set the chart name to the branch, but it can be anything."))),Object(i.b)("p",null,"Lastly, verify that the operator is running."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-console"}),"$ kubectl get pods\nNAME                                                READY   STATUS    RESTARTS   AGE\nskeleton-nifikop-8946b89dc-4cfs9   1/1     Running   0          7m45s\n")),Object(i.b)("h2",{id:"helm"},"Helm"),Object(i.b)("p",null,"The NiFiKop operator is released in the ",Object(i.b)("inlineCode",{parentName:"p"},"orange-incubator")," helm repository."),Object(i.b)("p",null,"In order to package the chart you need to run the following command. "),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"make helm-package\n")))}p.isMDXComponent=!0},180:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(a),u=n,m=s["".concat(o,".").concat(u)]||s[u]||d[u]||i;return a?r.a.createElement(m,c({ref:t},b,{components:a})):r.a.createElement(m,c({ref:t},b))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var b=2;b<i;b++)o[b]=a[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);